name: Build TrashCat

on:
  push:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to checkout for AltTester submodule"
        default: "development"
        required: true
      platforms:
        description: "Select platform(s) to build"
        type: choice
        required: true
        default: "Windows"
        options:
          - Windows
          - macOS
          - Android
          - WebGL
concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }} 
  cancel-in-progress: true

jobs:
  get-build-platforms:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.set-matrix.outputs.platforms }}
    steps:
      - uses: joao-zanutto/get-selected@v2
        id: set-matrix
        with:
          selected: ${{ github.event.inputs.platforms }}
          options: '["Windows", "macOS", "Android", "WebGL"]' 

  build:
    needs: get-build-platforms
    strategy:
      matrix:
        platform: ${{ fromJson(needs.get-build-platforms.outputs.platforms) }}
    runs-on: ${{ matrix.platform == 'Windows' && '["self-hosted", "Windows", "product"]' || '["self-hosted", "MAC37"]' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Update Submodules
        run: |
          git submodule foreach --recursive git reset --hard
          git submodule foreach --recursive git clean -fd
          git submodule update --init --recursive
        
      - name: Checkout AltTester Submodule Branch
        shell: bash
        run: |
          cd TrashCat/Assets/AltTester-Unity-SDK
          git fetch
          git checkout "${{ github.event.inputs.branch || 'development' }}"
          git pull --rebase origin "${{ github.event.inputs.branch || 'development' }}"

      - name: Build TrashCat
        run: |
          export ALTSERVER_PORT=13000
          export ALTSERVER_HOST="192.168.11.35"
          if [ "${{ matrix.platform }}" = "Windows" ]; then
            "$UNITY_2021_3_HOME" -batchmode -stackTraceLogType None -projectPath $GITHUB_WORKSPACE/TrashCat -executeMethod BuildTrashCat.WindowsBuildFromCommandLine -logFile buildWindows.log -quit
          elif [ "${{ matrix.platform }}" = "macOS" ]; then
            $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR/TrashCat -executeMethod BuildTrashCat.MacBuildFromCommandLine -logFile buildMac.log -quit
          elif [ "${{ matrix.platform }}" = "Android" ]; then
            $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR/TrashCat -executeMethod BuildTrashCat.AndroidBuildFromCommandLine -logFile buildAndroid.log -quit
          elif [ "${{ matrix.platform }}" = "WebGL" ]; then
            $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR/TrashCat -executeMethod BuildTrashCat.WebGLBuildFromCommandLine -logFile buildWebGL.log -quit
          fi

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Build-${{ matrix.platform }}-Artifact
          path: |
            **/*.log
            **/TrashCatBuild/*
            **/TrashCat.apk
            **/TrashCat.app
            **/build/webgl

  # build-windows:
  #   runs-on: [self-hosted, Windows, product]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: "recursive"

  #     - name: Update Submodules
  #       run: |
  #         git submodule foreach --recursive git reset --hard
  #         git submodule foreach --recursive git clean -fd
  #         git submodule update --init --recursive
        
  #     - name: Checkout AltTester Submodule Branch
  #       shell: bash
  #       run: |
  #         cd TrashCat/Assets/AltTester-Unity-SDK
  #         git fetch
  #         git checkout "${{ github.event.inputs.branch || 'development' }}"
  #         git pull --rebase origin "${{ github.event.inputs.branch || 'development' }}"

  #     - name: Build TrashCat
  #       shell: bash
  #       run: |
  #         export ALTSERVER_PORT=13000
  #         export ALTSERVER_HOST="192.168.11.35"
  #         "$UNITY_2021_3_HOME" -batchmode -stackTraceLogType None -projectPath $GITHUB_WORKSPACE/TrashCat -executeMethod BuildTrashCat.WindowsBuildFromCommandLine -logFile buildWindows.log -quit

  #     - uses: actions/upload-artifact@v4
  #       if: always() # run this step even if one of the previous steps failed
  #       with:
  #         name: BuildWindowsArtifact
  #         path: |
  #           **/TrashCatBuild/*
  #           **/*.log

  # build-macOS:
  #   runs-on: [self-hosted, MAC37]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: "recursive"

  #     - name: Update Submodules
  #       run: |
  #         git submodule foreach --recursive git reset --hard
  #         git submodule foreach --recursive git clean -fd
  #         git submodule update --init --recursive
        
  #     - name: Checkout AltTester Submodule Branch
  #       shell: bash
  #       run: |
  #         cd TrashCat/Assets/AltTester-Unity-SDK
  #         git fetch
  #         git checkout "${{ github.event.inputs.branch || 'development' }}"
  #         git pull --rebase origin "${{ github.event.inputs.branch || 'development' }}"

  #     - name: Build TrashCat
  #       run: |
  #         export ALTSERVER_PORT=13000
  #         export ALTSERVER_HOST="192.168.11.35"
  #         echo $CI_PROJECT_DIR
  #         $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR/TrashCat -executeMethod BuildTrashCat.MacBuildFromCommandLine -logFile buildMac.log -quit

  #     - uses: actions/upload-artifact@v4
  #       if: always() # run this step even if one of the previous steps failed
  #       with:
  #         name: BuildMacArtifact
  #         path: |
  #           **/TrashCat.app
  #           **/*.log

  # build-android:
  #   runs-on: [self-hosted, MAC37]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: "recursive"

  #     - name: Update Submodules
  #       run: |
  #         git submodule foreach --recursive git reset --hard
  #         git submodule foreach --recursive git clean -fd
  #         git submodule update --init --recursive
        
  #     - name: Checkout AltTester Submodule Branch
  #       shell: bash
  #       run: |
  #         cd TrashCat/Assets/AltTester-Unity-SDK
  #         git fetch
  #         git checkout "${{ github.event.inputs.branch || 'development' }}"
  #         git pull --rebase origin "${{ github.event.inputs.branch || 'development' }}"

  #     - name: Build TrashCat
  #       run: |
  #         export ALTSERVER_PORT=13000
  #         export ALTSERVER_HOST="192.168.11.35"
  #         $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR/TrashCat -executeMethod BuildTrashCat.AndroidBuildFromCommandLine -logFile buildAndroid.log -quit

  #     - uses: actions/upload-artifact@v4
  #       if: always() # run this step even if one of the previous steps failed
  #       with:
  #         name: BuildAndroidArtifact
  #         path: |
  #           **/TrashCat.apk
  #           **/*.log

  # build-iOS:
  #   runs-on: [self-hosted, MAC37]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: "recursive"

  #     - name: Checkout Submodules to Development Branch
  #       run: |
  #         git submodule foreach --recursive git fetch origin
  #         git submodule foreach --recursive git checkout development --force
  #         git submodule foreach --recursive git pull origin development

  #     - name: Build TrashCat
  #       run: |
  #         export ALTSERVER_PORT=13000
  #         export ALTSERVER_HOST="192.168.11.35"
  #         $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR/TrashCat -executeMethod BuildTrashCat.IosBuildFromCommandLine -logFile buildiOS.log -quit
  #         xcodebuild -project ./TrashCat/TrashCat/Unity-iPhone.xcodeproj -scheme Unity-iPhone -archivePath Unity-iPhone.xcarchive archive
  #         xcodebuild -exportArchive -archivePath ./Unity-iPhone.xcarchive -exportOptionsPlist $EXPORT_OPTIONS_LOCATION/export-options.plist -exportPath ./
  #         osascript -e 'tell app "Xcode" to quit'

  #     - uses: actions/upload-artifact@v4
  #       if: always() # run this step even if one of the previous steps failed
  #       with:
  #         name: BuildiOSArtifact
  #         path: |
  #           **/TrashCat.ipa
  #           **/*.log

  build-WebGL:
    runs-on: [self-hosted, MAC37]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Update Submodules
        run: |
          git submodule foreach --recursive git reset --hard
          git submodule foreach --recursive git clean -fd
          git submodule update --init --recursive
        
      - name: Checkout AltTester Submodule Branch
        shell: bash
        run: |
          cd TrashCat/Assets/AltTester-Unity-SDK
          git fetch
          git checkout "${{ github.event.inputs.branch || 'development' }}"
          git pull --rebase origin "${{ github.event.inputs.branch || 'development' }}"

      - name: Build TrashCat
        run: |
          export ALTSERVER_PORT=13000
          export ALTSERVER_HOST="192.168.11.35"
          $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR/TrashCat -executeMethod BuildTrashCat.WebGLBuildFromCommandLine -logFile buildWebGL.log -quit

      - uses: actions/upload-artifact@v4
        if: always() # run this step even if one of the previous steps failed
        with:
          name: BuildWebGLArtifact
          path: |
            **/build/webgl
            **/*.log